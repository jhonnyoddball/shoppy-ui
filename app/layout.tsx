import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Container, CssBaseline } from "@mui/material";
import Header from "./header/header";
import Providers from "./providers";
import Logout from "./auth/logout";
import authenticated from "./auth/actions/authenticated";

// Type assertion to fix TypeScript issue
const ProvidersWithProps = Providers as React.ComponentType<{
  children: React.ReactNode;
  authenticated: boolean;
}>;

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const isAuthenticated = await authenticated();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ProvidersWithProps authenticated={isAuthenticated}>
          <CssBaseline />
          <Header logout={Logout} />
          <Container maxWidth="lg" sx={{ py: 4 }}>
            {children}
          </Container>
        </ProvidersWithProps>
      </body>
    </html>
  );
}
